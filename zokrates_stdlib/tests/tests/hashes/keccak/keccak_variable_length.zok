import "hashes/keccak/keccak_variable_length" as keccak

// test is using rlp header from ETH block #1 (532bytes)
// Python code:
// >>> from Crypto.Hash import keccak

// >>> digest = keccak.new(digest_bits=256)
// >>> digest.update([rlp bytes from ETH block #1])
// >>> digest.hexdigest()
// '88e96d4537bea4d9c05d12549907b32561d3bf31f45aae734cdc119f13406cb6'

def main():
    u64[71] rlp_header = [17942923247861720896, 17903689752055429226, 4671910012365379792, 10406188054039268365, 12811491497914256461, 16780068465932993973, 7473385843023090245, 1987365566732607810, 18248819419131413925, 7939092737458313347, 17657563126904180709, 5593366105319884035, 4829094813448171847, 4851367985734015936, 11663731820858821946, 5993151599124946711, 2003070110012753382, 10574725077927518235, 11055402225456263093, 16385137925820966943, 1665149155489579845, 16614554148559079648, 1988740203967242799, 13106428965889310976, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9584785357195444610, 1407516189415588388, 11044908161787983409, 3328210909115738478, 8464567620936478260, 3328899643295665634, 8893138832464164445, 15447159393970045437, 1792909217407047106, 16604588793191453847, 11524463798626811904, 0, 0, 0, 0]
    u64[4] h = keccak::<_, 256>(rlp_header, 0x0000000100000000, 67)[..4]
    assert(h == [9865536602787194073, 13861255382670226213, 7049188063038844531, 5538321016679328950])
    return